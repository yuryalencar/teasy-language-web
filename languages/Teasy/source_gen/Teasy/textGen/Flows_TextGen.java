package Teasy.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenDescriptorBase;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class Flows_TextGen extends TextGenDescriptorBase {
  @Override
  public void generateText(final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    tgs.append("*** Settings ***");
    tgs.newLine();
    tgs.indent();
    tgs.append("Documentation       Tests for respective flows");
    tgs.newLine();
    tgs.indent();
    tgs.append("...");
    tgs.newLine();
    tgs.indent();
    tgs.append("...                 Executable tests presents in this file.");
    tgs.newLine();
    tgs.newLine();
    tgs.indent();
    tgs.append("Resource            ../pages/commons/hooks.pages.commons.robot");
    tgs.newLine();
    tgs.indent();
    tgs.append("Resource            ../config/page_register.config.robot");
    tgs.newLine();
    tgs.newLine();
    tgs.indent();
    tgs.append("Test Setup          Start Test");
    tgs.newLine();
    tgs.indent();
    tgs.append("Test Teardown       Finish Test");
    tgs.newLine();
    tgs.newLine();
    tgs.indent();
    tgs.append("*** Test Cases ***");
    tgs.newLine();
    tgs.indent();
    for (SNode flow : ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.flow$TxiH))) {
      tgs.increaseIndent();
      tgs.appendNode(flow);
      tgs.decreaseIndent();
      tgs.newLine();
      tgs.indent();
    }
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink flow$TxiH = MetaAdapterFactory.getContainmentLink(0x67c1fa65c7ac493dL, 0xb11b664188147c91L, 0x4326e26a2135e169L, 0x4326e26a2135e16aL, "flow");
  }
}
